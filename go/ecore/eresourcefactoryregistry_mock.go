// Code generated by mockery v1.0.0. DO NOT EDIT.

package ecore

import (
	url "net/url"

	mock "github.com/stretchr/testify/mock"
)

// MockEResourceFactoryRegistry is an autogenerated mock type for the EResourceFactoryRegistry type
type MockEResourceFactoryRegistry struct {
	mock.Mock
}

// GetExtensionToFactoryMap provides a mock function with given fields:
func (_m *MockEResourceFactoryRegistry) GetExtensionToFactoryMap() map[string]EResourceFactory {
	ret := _m.Called()

	var r0 map[string]EResourceFactory
	if rf, ok := ret.Get(0).(func() map[string]EResourceFactory); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(map[string]EResourceFactory)
		}
	}

	return r0
}

// GetFactory provides a mock function with given fields: uri
func (_m *MockEResourceFactoryRegistry) GetFactory(uri *url.URL) EResourceFactory {
	ret := _m.Called(uri)

	var r0 EResourceFactory
	if rf, ok := ret.Get(0).(func(*url.URL) EResourceFactory); ok {
		r0 = rf(uri)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(EResourceFactory)
		}
	}

	return r0
}

// GetProtocolToFactoryMap provides a mock function with given fields:
func (_m *MockEResourceFactoryRegistry) GetProtocolToFactoryMap() map[string]EResourceFactory {
	ret := _m.Called()

	var r0 map[string]EResourceFactory
	if rf, ok := ret.Get(0).(func() map[string]EResourceFactory); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(map[string]EResourceFactory)
		}
	}

	return r0
}
