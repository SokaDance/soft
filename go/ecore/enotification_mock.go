// Code generated by mockery v1.0.0. DO NOT EDIT.

package ecore

import mock "github.com/stretchr/testify/mock"

// MockENotification is an autogenerated mock type for the ENotification type
type MockENotification struct {
	mock.Mock
}

// GetEventType provides a mock function with given fields:
func (_m *MockENotification) GetEventType() EventType {
	ret := _m.Called()

	var r0 EventType
	if rf, ok := ret.Get(0).(func() EventType); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(EventType)
	}

	return r0
}

// GetFeature provides a mock function with given fields:
func (_m *MockENotification) GetFeature() EStructuralFeature {
	ret := _m.Called()

	var r0 EStructuralFeature
	if rf, ok := ret.Get(0).(func() EStructuralFeature); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(EStructuralFeature)
		}
	}

	return r0
}

// GetFeatureID provides a mock function with given fields:
func (_m *MockENotification) GetFeatureID() int {
	ret := _m.Called()

	var r0 int
	if rf, ok := ret.Get(0).(func() int); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(int)
	}

	return r0
}

// GetNewValue provides a mock function with given fields:
func (_m *MockENotification) GetNewValue() interface{} {
	ret := _m.Called()

	var r0 interface{}
	if rf, ok := ret.Get(0).(func() interface{}); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(interface{})
		}
	}

	return r0
}

// GetNotifier provides a mock function with given fields:
func (_m *MockENotification) GetNotifier() ENotifier {
	ret := _m.Called()

	var r0 ENotifier
	if rf, ok := ret.Get(0).(func() ENotifier); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(ENotifier)
		}
	}

	return r0
}

// GetOldValue provides a mock function with given fields:
func (_m *MockENotification) GetOldValue() interface{} {
	ret := _m.Called()

	var r0 interface{}
	if rf, ok := ret.Get(0).(func() interface{}); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(interface{})
		}
	}

	return r0
}

// GetPosition provides a mock function with given fields:
func (_m *MockENotification) GetPosition() int {
	ret := _m.Called()

	var r0 int
	if rf, ok := ret.Get(0).(func() int); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(int)
	}

	return r0
}

// Merge provides a mock function with given fields: _a0
func (_m *MockENotification) Merge(_a0 ENotification) bool {
	ret := _m.Called(_a0)

	var r0 bool
	if rf, ok := ret.Get(0).(func(ENotification) bool); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}
