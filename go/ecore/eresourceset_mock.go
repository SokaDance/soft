// Code generated by mockery v1.0.0. DO NOT EDIT.

package ecore

import (
	url "net/url"

	mock "github.com/stretchr/testify/mock"
)

// MockEResourceSet is an autogenerated mock type for the EResourceSet type
type MockEResourceSet struct {
	mock.Mock
}

// CreateResource provides a mock function with given fields: uri
func (_m *MockEResourceSet) CreateResource(uri *url.URL) EResource {
	ret := _m.Called(uri)

	var r0 EResource
	if rf, ok := ret.Get(0).(func(*url.URL) EResource); ok {
		r0 = rf(uri)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(EResource)
		}
	}

	return r0
}

// GetEObject provides a mock function with given fields: uri, loadOnDemand
func (_m *MockEResourceSet) GetEObject(uri *url.URL, loadOnDemand bool) EObject {
	ret := _m.Called(uri, loadOnDemand)

	var r0 EObject
	if rf, ok := ret.Get(0).(func(*url.URL, bool) EObject); ok {
		r0 = rf(uri, loadOnDemand)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(EObject)
		}
	}

	return r0
}

// GetResource provides a mock function with given fields: uri, loadOnDemand
func (_m *MockEResourceSet) GetResource(uri *url.URL, loadOnDemand bool) EResource {
	ret := _m.Called(uri, loadOnDemand)

	var r0 EResource
	if rf, ok := ret.Get(0).(func(*url.URL, bool) EResource); ok {
		r0 = rf(uri, loadOnDemand)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(EResource)
		}
	}

	return r0
}

// GetResourceFactoryRegistry provides a mock function with given fields:
func (_m *MockEResourceSet) GetResourceFactoryRegistry() EResourceFactoryRegistry {
	ret := _m.Called()

	var r0 EResourceFactoryRegistry
	if rf, ok := ret.Get(0).(func() EResourceFactoryRegistry); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(EResourceFactoryRegistry)
		}
	}

	return r0
}

// GetResources provides a mock function with given fields:
func (_m *MockEResourceSet) GetResources() EList {
	ret := _m.Called()

	var r0 EList
	if rf, ok := ret.Get(0).(func() EList); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(EList)
		}
	}

	return r0
}

// GetURIConverter provides a mock function with given fields:
func (_m *MockEResourceSet) GetURIConverter() EURIConverter {
	ret := _m.Called()

	var r0 EURIConverter
	if rf, ok := ret.Get(0).(func() EURIConverter); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(EURIConverter)
		}
	}

	return r0
}

// GetURIResourceMap provides a mock function with given fields:
func (_m *MockEResourceSet) GetURIResourceMap() map[*url.URL]EResource {
	ret := _m.Called()

	var r0 map[*url.URL]EResource
	if rf, ok := ret.Get(0).(func() map[*url.URL]EResource); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(map[*url.URL]EResource)
		}
	}

	return r0
}

// SetResourceFactoryRegistry provides a mock function with given fields: resourceFactoryRegistry
func (_m *MockEResourceSet) SetResourceFactoryRegistry(resourceFactoryRegistry EResourceFactoryRegistry) {
	_m.Called(resourceFactoryRegistry)
}

// SetURIConverter provides a mock function with given fields: uriConverter
func (_m *MockEResourceSet) SetURIConverter(uriConverter EURIConverter) {
	_m.Called(uriConverter)
}

// SetURIResourceMap provides a mock function with given fields: uriMap
func (_m *MockEResourceSet) SetURIResourceMap(uriMap map[*url.URL]EResource) {
	_m.Called(uriMap)
}
