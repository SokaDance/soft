[comment encoding = UTF-8 /]
[module generatePackageImplementation('http://www.eclipse.org/emf/2002/Ecore')]

[import soft::generator::common::generateCommon/]

[import soft::generator::go::generateCommon/]
[import soft::generator::go::generateType/]
[import soft::generator::go::lib::generateCommon/]
[import soft::generator::go::lib::pack::generateCommon/]

[template private generateDataMember(anENamedElement : ENamedElement, anEPackage : EPackage)] 
[anENamedElement.getElementInstanceName()/] [getMetaType(anENamedElement)/] 

[/template]

[template private generateGetter(anENamedElement : ENamedElement, anEPackage : EPackage)]
[let thisType : String = anEPackage.getImplementationName()]
[let thisName : String = thisType.toLowerFirst()] 
// [anENamedElement.getReflectiveGetterName()/] returns the meta object corresponding to 
func ([thisName/] *[thisType/]) [anENamedElement.getReflectiveGetterName()/]() [getMetaType(anENamedElement)/] {
    return [thisName/].[anENamedElement.getElementInstanceName()/]
}
[/let]
[/let]
[/template]



[template public generatePackageImplementation(anEPackage : EPackage){ className : String = anEPackage.getImplementationName() ; receiverName : String = className.toLowerFirst() } ]]
[file (anEPackage.getOutputDirectory() + '/'+ anEPackage.getOutputFileName(className) , false, 'UTF-8')]
package [anEPackage.name/]

// [className/] is the [anEPackage.getInterfaceName()/] implementation
type [className/] struct {
    EPackageImpl
[for (aClass : EClass | anEPackage.eAllContents(EClass)->asOrderedSet()->sortedBy(name))]
    [let dataMembers : Sequence(ENamedElement) = Sequence{ Sequence{ aClass } , aClass.eStructuralFeatures, aClass.eOperations}->flatten()]
    [dataMembers.generateDataMember(anEPackage)/]
    [/let]
[/for]
    [anEPackage.eAllContents(EDataType)->sortedBy(name).generateDataMember(anEPackage)/]
}

func New[className/]() *[className/] {
    p := new([className/])
    p.createPackageContents()
    p.initializePackageContents()
    return p
}

[for (aClass : EClass | anEPackage.eAllContents(EClass)->asOrderedSet()->sortedBy(name))]
[aClass.generateGetter(anEPackage)/]
[aClass.eAttributes->sortedBy(name).generateGetter(anEPackage)/]
[aClass.eReferences->sortedBy(name).generateGetter(anEPackage)/]
[aClass.eOperations->sortedBy(name).generateGetter(anEPackage)/]
[/for]
[anEPackage.eAllContents(EDataType)->sortedBy(name).generateGetter(anEPackage)/]

func ([receiverName/] *[className/])createPackageContents() {
}

func ([receiverName/] *[className/])initializePackageContents() {
    // Initialize package
    [receiverName/].SetName(NAME);
    [receiverName/].SetNsPrefix(NS_PREFIX);
    [receiverName/].SetNsURI(NS_URI);
}


[/file]
[/template]
