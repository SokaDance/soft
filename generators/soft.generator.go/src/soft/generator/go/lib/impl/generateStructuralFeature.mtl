[comment encoding = UTF-8 /]
[module generateStructuralFeature('http://www.eclipse.org/emf/2002/Ecore')/]

[import soft::generator::go::generateType/]
[import soft::generator::go::generateCommon/]
[import soft::generator::go::lib::generateOperation/]
[import soft::generator::go::lib::impl::generateCommon/]

[template public generateVariable(aStructuralFeature : EStructuralFeature)]
[getClassAttributeFormat(aStructuralFeature.name)/] [generateType(aStructuralFeature)/]

[/template]

[template public generateOperationPanic(anEOperation : EOperation, baseClass : EClass)]
[generateImplementationMember(baseClass)/] [generateDeclaration(anEOperation).toString().trim()/] {
    panic("[generateDeclaration(anEOperation).toString().trim()/] not implemented")
}

[/template]

[template public generateImplementation(aStructuralFeature : EStructuralFeature, useSub : EBoolean, baseClass : EClass)]
[if isGet()]
[aStructuralFeature.generateGetImplementation(useSub, baseClass)/]
[/if]
[if isSet()]
[aStructuralFeature.generateSetImplementation(useSub, baseClass)/]
[/if]
[if isUnSet()]
[aStructuralFeature.generateUnSetImplementation(useSub, baseClass)/]
[/if]
[/template]

[template public generateImplementationMember(cl : EClass)]
func ([getImplementationFormat(cl)/] *[getImplementationName(cl)/])
[/template]

[template public generateGetImplementation(aStructuralFeature : EStructuralFeature, useSub : EBoolean, baseClass : EClass)]
// [aStructuralFeature.getGetterName()/] get the value of [getClassAttributeFormat(aStructuralFeature.name)/]
[generateImplementationMember(baseClass)/] [aStructuralFeature.getGetterName()/]() [aStructuralFeature.generateType()/] {
[if useSub]
    return [getImplementationFormat(baseClass)/].[aStructuralFeature.getGetterName()/]()
[else]
    return [getImplementationFormat(baseClass)/].[getClassAttributeFormat(aStructuralFeature.name)/]
[/if]
}

[/template]

[template public generateSetImplementation(aStructuralFeature : EStructuralFeature, useSub : EBoolean, baseClass : EClass)]
// [aStructuralFeature.getSetterName()/] set the value of [getClassAttributeFormat(aStructuralFeature.name)/]
[generateImplementationMember(baseClass)/] [aStructuralFeature.getSetterName()/]( new_[aStructuralFeature.name/] [aStructuralFeature.generateType()/] ) {
[if useSub]
    [getImplementationFormat(baseClass)/].[aStructuralFeature.getSetterName()/](new_[aStructuralFeature.name/])
[else]
    [getImplementationFormat(baseClass)/].[getClassAttributeFormat(aStructuralFeature.name)/] = new_[aStructuralFeature.name/]
[/if]
}

[/template]

[template public generateUnSetImplementation(aStructuralFeature : EStructuralFeature, useSub : EBoolean, baseClass : EClass)]
// [aStructuralFeature.getUnSetterName()/] unset the value of [getClassAttributeFormat(aStructuralFeature.name)/]
[generateImplementationMember(baseClass)/] [aStructuralFeature.getUnSetterName()/]() {
[if useSub]
    [getImplementationFormat(baseClass)/].[aStructuralFeature.getUnSetterName()/]()
[else]
    [getImplementationFormat(baseClass)/].[getClassAttributeFormat(aStructuralFeature.name)/] = [getDefaultValue(aStructuralFeature.eGenericType.eClassifier)/]
[/if]
}

[/template]
