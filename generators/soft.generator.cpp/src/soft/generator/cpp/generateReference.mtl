[comment encoding = UTF-8 /]
[module generateReference('http://www.eclipse.org/emf/2002/Ecore')]

[import soft::generator::cpp::generateClass /]
[import soft::generator::cpp::generateType /]
[import soft::generator::cpp::generateCommon /]


[template public generateReferenceCreation(anEReference : EReference)]
[anEReference.getElementInstanceName()/] = factory->createEReference([anEReference.eContainingClass.getElementInstanceName()/], [anEReference.eContainingClass.getFeatureIDName(anEReference)/]);

[/template] 
 
[template public generateReferenceInitialization(anEReference : EReference)]
[anEReference.getElementInstanceName()/]->setName("[anEReference.name/]");
[anEReference.getElementInstanceName()/]->setEType([anEReference.eGenericType.eClassifier.packageGetter(anEReference)/]);
[anEReference.getElementInstanceName()/]->setLowerBound([anEReference.lowerBound/]);
[anEReference.getElementInstanceName()/]->setUpperBound([anEReference.upperBound/]);
[anEReference.getElementInstanceName()/]->setTransient([anEReference.transient.toString()/]);
[anEReference.getElementInstanceName()/]->setVolatile([anEReference.volatile.toString()/]);
[anEReference.getElementInstanceName()/]->setChangeable([anEReference.changeable.toString()/]);
[anEReference.getElementInstanceName()/]->setUnsettable([anEReference.unsettable.toString()/]);
[anEReference.getElementInstanceName()/]->setUnique([anEReference.unique.toString()/]);
[anEReference.getElementInstanceName()/]->setDerived([anEReference.derived.toString()/]);
[anEReference.getElementInstanceName()/]->setOrdered([anEReference.ordered.toString()/]);
[anEReference.getElementInstanceName()/]->setContainment([anEReference.containment.toString()/]);
[anEReference.getElementInstanceName()/]->setResolveProxies([anEReference.resolveProxies.toString()/]);
{
	std::string defaultValue = "[anEReference.defaultValueLiteral/]";
	if (!defaultValue.empty())
		[anEReference.getElementInstanceName()/]->setDefaultValueLiteral(defaultValue);

	std::shared_ptr<ecore::EReference>  otherEnd = [anEReference.eOpposite.getPackageGetter()/];
	if (otherEnd != nullptr)
   		[anEReference.getElementInstanceName()/]->setEOpposite(otherEnd);
}

[/template]
