[comment encoding = UTF-8 /]
[module generateDataType('http://www.eclipse.org/emf/2002/Ecore')]

[import soft::generator::cpp::generateCommon /]


[template public generateEDatatypeCreation(anEDatatype : EDataType)]
[anEDatatype.getElementInstanceName()/] = factory->create[if (anEDatatype.oclIsKindOf(EEnum))]EEnum[else]EDataType[/if](package, [anEDatatype.getClassifierIDName()/]);

[/template]

[template public generateEDatatypeInitialization(adatatype : EDataType)]
[adatatype.getElementInstanceName()/]->setName("[adatatype.name/]");
[if (not adatatype.oclIsKindOf(EEnum))]
[adatatype.getElementInstanceName()/]->setSerializable([adatatype.serializable.toString()/]);
[/if]
[/template]

[template public generateStaticDataTypeID(aEDatatype : EDataType )]
/**
 * The meta object id for the [if aEDatatype.oclIsKindOf(EEnum)]enum[else]data type[/if] [aEDatatype.name/].
 */
static const int [aEDatatype.getClassifierIDName()/] = [aEDatatype.getClassifierIDValue()/];

[/template]

[template public generateCreateFromStringDeclaration(aEDatatype : EDataType )]
virtual boost::any create[aEDatatype.name/]FromString( const std::shared_ptr<ecore::EDataType>& dataType , const std::string& literalValue ) const;

[/template]

[template public generateCreateFromStringDefinition(aEDatatype : EDataType )]
[/template]

[template public generateConvertToStringDeclaration(aEDatatype : EDataType )]
virtual std::string convert[aEDatatype.name/]ToString( const std::shared_ptr<ecore::EDataType>& dataType , const boost::any& literalValue ) const;

[/template]

[template public generateConvertToStringDefinition(aEDatatype : EDataType )]
[/template]