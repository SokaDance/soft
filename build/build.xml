<?xml version="1.0"?>
<project name="soft" default="all">

    <taskdef resource="net/sf/antcontrib/antlib.xml"/>

    <property file="build.properties"/>
  
    <macrodef name="property-to-location">
        <attribute name="name"/>
        <sequential>
            <echo taskname="property-to-location" level="debug" message="@{name} : ${@{name}}"/>
            <var name="tmp.dir" value="${@{name}}"/>
            <var name="@{name}" unset="true"/>
            <property name="@{name}" location="${tmp.dir}"/>
            <echo taskname="property-to-location" level="debug" message="    -> ${@{name}}"/>
        </sequential>
    </macrodef>

    <propertyselector property="dirs" match="\A.*\.dir\z" distinct="true"/>
    <for list="${dirs}" param="dir">
        <sequential>
            <property-to-location name="@{dir}"/>
        </sequential>
    </for>
    
    <target name="aria2.initialize">
        <local name="file"/>
        <local name="version"/>
        <property name="file" value ="aria2-1.34.0-win-64bit-build1"/>  
        <property name="version" value ="1.34.0"/>  
        <mkdir dir="${cache.dir}"/>
        <get src="https://github.com/aria2/aria2/releases/download/release-${version}/${file}.zip"
             dest="${cache.dir}"
             verbose="true"
             usetimestamp="true"/>
        <mkdir dir="${bin.dir}/aria2"/>
        <unzip src="${cache.dir}/${file}.zip" dest="${bin.dir}/aria2">
            <globmapper from="${file}/*" to="*"/>
        </unzip>
    </target>
    
    <macrodef name="download">
        <attribute name="url"/>
        <attribute name="dir" default="${cache.dir}"/>
        <element name="args" implicit="yes" optional="yes"/>
        <sequential>
            <exec taskname="download" executable="${bin.dir}/aria2/aria2c.exe" dir="${bin.dir}/aria2" failonerror="true">
                <arg value="--continue=true"/>
                <arg value="--allow-overwrite=false"/>
                <arg value="--auto-file-renaming=false"/>
                <arg value="--dir"/>
                <arg value="@{dir}"/>
                <args/>
                <arg value="@{url}"/>
            </exec>
        </sequential>
    </macrodef>
    
    
    <target name="ant.initialize">
        <local name="file"/>
        <local name="version"/>
        <property name="file" value ="ant-contrib-1.0b3-bin"/>  
        <property name="version" value ="1.0b3"/>
        <mkdir dir="${cache.dir}"/>
        <download url="https://sourceforge.net/projects/ant-contrib/files/ant-contrib/${version}/${file}.zip"/>
        <unzip src="${cache.dir}/${file}.zip" dest="${bin.dir}/ant-contrib">
            <globmapper from="ant-contrib/*" to="*"/>
        </unzip>
    </target>
    
    <target name="cmake.initialize">
        <local name="file"/>
        <local name="version"/>
        <property name="file" value ="cmake-3.13.2-win64-x64"/>  
        <property name="version" value ="3.13.2"/>
        <mkdir dir="${cache.dir}"/>
        <download url="https://github.com/Kitware/CMake/releases/download/v${version}/${file}.zip"/>
        <unzip src="${cache.dir}/${file}.zip" dest="${bin.dir}/cmake">
            <globmapper from="${file}/*" to="*"/>
        </unzip>
    </target>
    
    <target name="maven.initialize">
        <local name="file"/>
        <local name="version"/>
        <property name="file" value ="apache-maven-3.6.0-bin"/>  
        <property name="version" value ="3.6.0"/>
        <mkdir dir="${cache.dir}"/>
        <download url="https://www-us.apache.org/dist/maven/maven-3/${version}/binaries/${file}.zip">
            <arg value="--checksum=sha-512=7d14ab2b713880538974aa361b987231473fbbed20e83586d542c691ace1139026f232bd46fdcce5e8887f528ab1c3fbfc1b2adec90518b6941235952d3868e9"/>
        </download>
        <unzip src="${cache.dir}/${file}.zip" dest="${bin.dir}/maven">
            <globmapper from="apache-maven-3.6.0/*" to="*"/>
        </unzip>
    </target>
    
    <macrodef name="maven">
        <attribute name="dir"/>
        <element name="args" implicit="yes" optional="yes"/>
        <sequential>
            <local name="command"/>
            <propertyregex property="command" input="${bin.dir}/maven/bin/mvn.cmd" regexp="/" replace="\\\\"/>
            <exec executable="cmd" dir="@{dir}" failonerror="true">
                <arg value="/C"/>
                <arg value="${command}"/>
                <args/>
            </exec>
        </sequential>
    </macrodef>
    
    <target name="ninja.initialize">
        <local name="file"/>
        <local name="version"/>
        <property name="file" value ="ninja-win"/>  
        <property name="version" value ="1.8.2"/>
        <mkdir dir="${cache.dir}"/>
        <download url="https://github.com/ninja-build/ninja/releases/download/v${version}/${file}.zip"/>
        <unzip src="${cache.dir}/${file}.zip" dest="${bin.dir}/ninja">
            <globmapper from="${file}/*" to="*"/>
        </unzip>
    </target>
    
    <target name="initialize" depends="aria2.initialize
                                      ,cmake.initialize
                                      ,maven.initialize
                                      ,ninja.initialize"/>
    
    <target name="generators.build.cpp">
            <maven dir="${generators.dir}/soft.generator.cpp">
            <arg value="-Dproject.target=../../out/soft.generator.cpp"/>
            <arg line="clean verify" />
        </maven>
    
    </target>
    
    <target name="generators.clean.cpp">
        <maven dir="${generators.dir}/soft.generator.cpp">
            <arg value="-Dproject.target=../../out/soft.generator.cpp"/>
            <arg line="clean" />
        </maven>
    </target>
    
    <target name="generators.install.cpp">
        <unzip src="${out.dir}/soft.generator.cpp/soft.generator.cpp-1.0.0.zip" dest="${bin.dir}/soft.generator.cpp"/>
    </target>
    
    <target name="generators.dist.cpp">
        <copy file="${out.dir}/soft.generator.cpp/soft.generator.cpp-1.0.0.zip" todir="${dist.dir}"/>
    </target>
    
    <target name="generators.build" depends="generators.build.cpp"/>
    <target name="generators.clean" depends="generators.clean.cpp"/>
    <target name="generators.install" depends="generators.install.cpp"/>
    <target name="generators.dist" depends="generators.dist.cpp"/>
    
    <macrodef name="generator.cpp">
        <attribute name="input"/>
        <attribute name="output"/>
        <sequential>
            <java jar="${bin.dir}/soft.generator.cpp/soft.generator.cpp-1.0.0.jar"
                  fork="true"
                  failonerror="true"
                  maxmemory="128m">
                  <arg value="-m"/>
                  <arg value="@{input}"/>
                  <arg value="-o"/>
                  <arg value="@{output}"/>
            </java>
        </sequential>
    </macrodef>
    
    <target name="sources.generate.ecore">
        <generator.cpp input="${models.dir}/ecore.ecore" output="${root.dir}"/>
    </target>
    
    <target name="sources.clean.ecore">
        <exec executable="git" dir="${libraries.dir}/ecore" failonerror="true">
            <arg line="clean -xfd" />
        </exec>
        <exec executable="git" dir="${tests.dir}/ecore.tests" failonerror="true">
            <arg line="clean -xfd" />
        </exec>
    </target>
    
    <target name = "sources.generate" depends="sources.generate.ecore"/>
    <target name = "sources.clean" depends="sources.clean.ecore"/> 
    
    <property name = "cmake.generator.vs2015" value = "Visual Studio 14 2015 Win64"/>
    <property name = "cmake.generator.ninja" value = "Ninja"/>
    
    <macrodef name="cmake_exec">
        <attribute name="generator"/>
        <attribute name="configuration" default=""/>
        <element name="elements" implicit="true" optional="true"/>
        <sequential>
            <mkdir dir="${out.dir}/@{generator}/@{configuration}"/>
            <exec taskname="cmake" executable="${bin.dir}/cmake/bin/cmake.exe" dir="${out.dir}/@{generator}/@{configuration}" failonerror="true">
                <arg value="-G"/>
                <arg value="${cmake.generator.@{generator}}"/>
                <elements/>
                <arg value="${build.dir}/cmake"/>
            </exec>
        </sequential>
    </macrodef>
    
    <target name="cmake.configure.vs2015">
        <cmake_exec generator="vs2015"/>
    </target>
    
    <target name="cmake.configure.ninja.release">
        <mkdir dir="${out.dir}/ninja/release"/>
        <cmake_exec generator="ninja" configuration="release">
            <arg value="-DCMAKE_MAKE_PROGRAM=${bin.dir}/ninja/ninja.exe"/>
            <arg value="-DCMAKE_BUILD_TYPE=RelWithDebInfo"/>
        </cmake_exec>
    </target>
    
    <target name="cmake.configure.ninja.debug">
        <cmake_exec generator="ninja" configuration="debug">
            <arg value="-DCMAKE_MAKE_PROGRAM=${bin.dir}/ninja/ninja.exe"/>
            <arg value="-DCMAKE_BUILD_TYPE=Debug"/>
        </cmake_exec>
    </target>
    
    <target name="cmake.configure.ninja" depends="cmake.configure.ninja.release,cmake.configure.ninja.debug"/>
    
    <target name="cmake.configure" depends="cmake.configure.vs2015,cmake.configure.ninja"/>
    
    <macrodef name="ninja_exec">
        <attribute name="dir"/>
        <sequential>
            <property environment="env"/>
            <condition property="cores.count" value="${env.NUMBER_OF_PROCESSORS}" else="4">
                <os family="windows" />
            </condition>
            <exec taskname="build" executable="${bin.dir}/ninja/ninja.exe" dir="@{dir}" failonerror="true">
                <arg line="all"/>
                <arg value="-j"/>
                <arg value="${cores.count}"/>
            </exec>
        </sequential>
    </macrodef>
    
    <target name="cmake.build.debug">
        <ninja_exec dir="${out.dir}/ninja/debug"/>
    </target>
    
    <target name="cmake.build.release">
        <ninja_exec dir="${out.dir}/ninja/release"/>
    </target>
    
    <target name="cmake.build" depends="cmake.build.debug,cmake.build.release"/>
    
     <macrodef name="ctest_exec">
        <attribute name="dir"/>
        <sequential>
            <exec taskname="tests" executable="${bin.dir}/cmake/bin/ctest.exe" dir="@{dir}" failonerror="true">
                <arg value="."/>
                <arg value="--output-on-failure"/>
                <arg line="--tests-regex .*"/>
            </exec>
        </sequential>
    </macrodef>
    
    <target name="cmake.tests.debug">
        <ctest_exec dir="${out.dir}/ninja/debug"/>
    </target>
    
    <target name="cmake.tests.release">
        <ctest_exec dir="${out.dir}/ninja/release"/>
    </target>
    
    <target name="cmake.tests" depends="cmake.tests.debug,cmake.tests.release"/>
    
    <target name="build.clean">
        <exec executable="git" dir="${build.dir}" failonerror="true">
            <arg line="clean -xfd" />
        </exec>
    </target>
    
    <target name="generators" depends="generators.build,generators.dist,generators.install"/>
    
    <target name="generates" depends="sources.generate,cmake.configure"/>
    
    <target name="build" depends="cmake.build"/>
    
    <target name="tests" depends="cmake.tests"/>
    
    <target name="clean" depends="generators.clean,sources.clean,build.clean"/>
    
    <target name="all" depends="initialize,generators,generates,build,tests"/>
    
</project>